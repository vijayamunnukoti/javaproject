package project1;

import java.util.*;

interface Account{
	public void deposit(double amt);
	public void withdraw(double amt);
	public double getBalance();
}
 class SavingsAccount implements Account{
     double  balance;double interestRate;
     SavingsAccount( double initialDeposit, double interestRate){
    	 this.balance=initialDeposit;
    	 this.interestRate=interestRate;
     }
	@Override
	public void deposit(double amt) {
		balance+=amt;
	}

	@Override
	public void withdraw(double amt) {
		balance-=amt;
		
	}

	@Override
	public double getBalance() {
		// TODO Auto-generated method stub
		return balance;
	}
	void  applyInterest() {
		balance+=(balance*1*interestRate)/100;
		
	}}
 class CurrentAccount implements Account{
	 double balance, overdraftLimit;
	 CurrentAccount (double initialDeposit,double overdraftLimit){
		 this.balance=initialDeposit;
		 this.overdraftLimit=overdraftLimit;
		 
	 }
	@Override
	public void deposit(double amt) {
		
		balance+=amt;
	}

	@Override
	public void withdraw(double amt) {
		 if(amt<=(balance + overdraftLimit)) 
		balance-=amt;
		
	}

	@Override
	public double getBalance() {
		return balance;
	}
	void setOverdraftLimit(double overdraftLimit) {
		this.overdraftLimit=overdraftLimit;
	}
 }
 
 class Bank {
	 private List<Account> accounts;
	 Bank(){
	 accounts=new ArrayList<Account>();
		
	 }
	 void  addAccount(Account account) {
		 accounts.add(account);
	 }
	 void  removeAccount(Account account) {
		 accounts.remove(account);
		 
	 }
	 void  deposit(Account account, double amount) {
		 account.deposit(amount);
	 }
	 void  withdraw(Account account, double amount) {
		 account.withdraw(amount);
	 }
	void    printAccountBalances() {
		for(Account bln:accounts) {
			System.out.println("Accbalance is:"+bln.getBalance() );
		}
	}
 }
 
 public class Main {
	    public static void main(String[] args) {
	        Bank bank = new Bank();
	        SavingsAccount savingsAccount = new SavingsAccount(1000.0, 1.25);
	        System.out.println("Savings Account:\nInitial Deposit: $1000.00\nInterest rate: 1.25%");  
	        CurrentAccount currentAccount = new CurrentAccount(5000.0, 1000.0);
	        System.out.println("\nCurrent Account:\nInitial Deposit: $5000.00\nOverdraftLimit: $1000.00");
	bank.addAccount(savingsAccount);        bank.addAccount(currentAccount);
	System.out.println("\nNow deposit $100 to Savings Account.");       bank.deposit(savingsAccount, 100.0);
	        System.out.println("Now deposit $500 to Current Account.");       bank.deposit(currentAccount, 500.0);
	System.out.println("Withdraw $150 from Savings Account.\n");         bank.withdraw(savingsAccount, 150.0);
	        System.out.println("\nSavings A/c and Current A/c.:");               bank.printAccountBalances();
	        System.out.println("\nAApplying interest on SavingsA/c for 1 year:"); savingsAccount.applyInterest();
	System.out.println("Savings A/c and Current A/c.:");               bank.printAccountBalances();
	    }
	}
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 